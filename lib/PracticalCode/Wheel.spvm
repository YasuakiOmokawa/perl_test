package PracticalCode::Wheel {
  use SPVM::Math;
  use SPVM::Hash;

  has rim : int;
  has tire : float;

  sub new : PracticalCode::Wheel ($args : SPVM::Hash) {
    my $self = new PracticalCode::Wheel;
    $self->{rim} = $args->get_int("rim");
    $self->{tire} = $args->get_float("tire");
    return $self;
  }

  # accessor
  sub rim : int ($self : self) { return $self->{rim}; }
  sub tire : float ($self : self) { return $self->{tire}; }

  sub diameter : float ($self : self) {
    return $self->rim + ($self->tire * 2);
  }

  sub circumference : double ($self : self) {
    return $self->diameter * SPVM::Math->pi;
  }

}