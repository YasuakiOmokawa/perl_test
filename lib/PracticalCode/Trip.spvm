package PracticalCode::Trip {
  use SPVM::Hash;

  has bicycles : int;
  has customers : int;
  has vehicle : int;

  sub new : PracticalCode::Trip ($args : SPVM::Hash) {
    my $self = new PracticalCode::Trip;
    $self->{bicycles} = $args->get_int("bicycles");
    $self->{customers} = $args->get_float("customers");
    $self->{vehicle} = $args->get_float("vehicle");
    return $self;
  }

  # accessor
  sub bicycles : int ($self : self) { return $self->{bicycles}; }
  sub customers : int ($self : self) { return $self->{customers}; }
  sub vehicle : int ($self : self) { return $self->{vehicle}; }

  sub prepare : int ($mechanic : int) {
    return $mechanic->prepare_bicycles($bicycles);
  }

}